name: integration-tests

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.gitattributes'
      - '**/*.gitignore'
      - '**/*.md'
  pull_request:
    branches:
      - main
      - dotnet-vnext
      - dotnet-nightly
  workflow_dispatch:

permissions:
  contents: read

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_MULTILEVEL_LOOKUP: 0
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
  FORCE_COLOR: 3
  NUGET_XMLDOC_MODE: skip
  TERM: xterm

jobs:
  package:
    runs-on: ubuntu-latest

    outputs:
      dotnet-outdated-version: ${{ steps.get-dotnet-outdated-version.outputs.dotnet-outdated-version }}

    steps:

    - name: Checkout code
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

    - name: Install .NET SDKs
      uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.0.x
          9.0.x

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0

    - name: Publish NuGet package
      shell: pwsh
      run: |
        dotnet tool restore
        dotnet pack

    - name: Publish NuGet packages
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        name: packages
        path: ./artifacts/package/release
        if-no-files-found: error

    - name: Get dotnet-outdated version
      id: get-dotnet-outdated-version
      shell: pwsh
      run: |
        $dotnetOutdatedVersion = (Get-Content "./.config/dotnet-tools.json" | Out-String | ConvertFrom-Json).tools.'dotnet-outdated-tool'.version
        "dotnet-outdated-version=${dotnetOutdatedVersion}" >> $env:GITHUB_OUTPUT

  test:
    needs: [ package ]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        repo: [ alexa-london-travel, alexa-london-travel-site, api, apple-fitness-workout-mapper, costellobot, dependabot-helper, dotnet-bumper, project-euler, website ]
        upgrade-type: [ LTS, Latest, Preview ]
        include:
          - repo: dotnet-bumper
            upgrade-type: Preview
            warnings-as-errors: false

    steps:

    - name: Setup Node
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
      with:
        node-version: '20'

    - name: Checkout ${{ format('{0}/{1}', github.repository_owner, matrix.repo) }}
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      with:
        repository: ${{ format('{0}/{1}', github.repository_owner, matrix.repo) }}
        ref: ${{ format('{0}/{1}', github.repository_owner, matrix.repo) == github.repository && github.ref || '' }}

    - name: Install .NET SDKs
      uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.0.x
          9.0.x

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@4d6c8fcf3c8f7a60068d26b594648e99df24cee3 # v4.0.0

    - name: Download packages
      uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
      with:
        name: packages
        path: ./packages

    - name: Install .NET Bumper
      shell: pwsh
      env:
        DOTNET_OUTDATED_VERSION: ${{ needs.package.outputs.dotnet-outdated-version }}
      run: |
        dotnet tool install --global dotnet-outdated-tool --version ${env:DOTNET_OUTDATED_VERSION}
        dotnet tool install --global MartinCostello.DotNetBumper --add-source ./packages --prerelease

    - name: Generate .NET Bumper config
      id: generate-config
      shell: pwsh
      run: |
        $configFile = ""
        $hasConfigFile = ((Test-Path -Path ".dotnet-bumper.json") -Or (Test-Path -Path ".dotnet-bumper.yml")) -Or (Test-Path -Path ".dotnet-bumper.yaml")
        if (-Not $hasConfigFile) {
          $tempFile = [System.IO.Path]::GetTempFileName()
          $config = @{
            noWarn = @(
              'CA1515'
            )
          }
          $config | ConvertTo-Json | Out-File -FilePath $tempFile | Out-Null
          $configFile = $tempFile
        }
        "dotnet-bumper-config=${configFile}" >> $env:GITHUB_OUTPUT

    - name: Run .NET Bumper
      shell: pwsh
      env:
        DOTNET_BUMPER_CONFIG: ${{ steps.generate-config.outputs.dotnet-bumper-config }}
        DOTNET_BUMPER_UPGRADE_TYPE: ${{ matrix.upgrade-type }}
        DOTNET_BUMPER_WARNINGS_AS_ERRORS: ${{ format('{0}', matrix.warnings-as-errors) }}
      run: |
        $bumperArgs = @(
          ".",
          "--log-format",
          "GitHubActions",
          "--test",
          "--upgrade-type",
          ${env:DOTNET_BUMPER_UPGRADE_TYPE}
        )
        if (${env:DOTNET_BUMPER_WARNINGS_AS_ERRORS} -ne "false") {
          $bumperArgs += "--warnings-as-errors"
        }
        if (-Not [string]::IsNullOrEmpty(${env:DOTNET_BUMPER_CONFIG})) {
          $bumperArgs += "--configuration-file"
          $bumperArgs += ${env:DOTNET_BUMPER_CONFIG}
        }
        if (${env:RUNNER_DEBUG} -eq "1") {
          $bumperArgs += "--verbose"
        }
        dotnet bumper $bumperArgs

    - name: Show git diff
      shell: pwsh
      run: |
        git config color.diff always
        git --no-pager diff

  integration-tests:
    needs: [ package, test ]
    if: always() && !cancelled() && !contains(needs.*.result, 'failure')
    runs-on: ubuntu-latest
    steps:
    - run: echo 'Integration tests successful âœ…'
